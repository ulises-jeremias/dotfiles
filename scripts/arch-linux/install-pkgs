#!/usr/bin/env bash

aur_helpers=( yay aurman pakku pacaur trizen aura pikaur )

export AUR_HELPER=""

get_aur_helper() {
    if [ "${AUR_HELPER}" != "" ]; then
        echo "${AUR_HELPER}"
        return 0
    fi

    for helper in "${aur_helpers[@]}"; do
        if type -p "${helper}" > /dev/null; then
            export AUR_HELPER=${helper}
            break
        fi
    done

    echo "${AUR_HELPER}"
}

pacman_fetch_pkg() {
    [ "$(pacman -Ss "$1" | wc -l)" != "0" ]
    return $?
}

aur_helper_fetch_pkg() {
    local aur_helper
    aur_helper=$(get_aur_helper)

    if [ "${aur_helper}" = "" ]; then
        return 1
    fi

    [ "$(${aur_helper} -Ss "$1" | wc -l)" != "0" ]
    return $?
}

aur_fetch_pkg() {
    [ "$(git ls-remote https://aur.archlinux.org/"$1".git | wc -l)" != "0" ]
    return $?
}

aur_helper_install() {
    local aur_helper
    aur_helper=$(get_aur_helper)

    if [ "${aur_helper}" = "" ]; then
        return 1
    fi

    "${aur_helper}" --noconfirm -S "$1"
    return $?
}

aur_repos_install() {
    rm -rf /tmp/"$1"
    repo="$1"
    ! fetch_pkg "${repo}" && repo=""$1"-git"
    remote=https://aur.archlinux.org/"${repo}".git
    git clone "${remote}" /tmp/"${repo}" > /dev/null
    pushd /tmp/"${repo}" || return
    yes | makepkg -si
    res=$?
    popd || return
    return $res
}

aur_install() {
    aur_helper_install "$1" || aur_repos_install "$1"
    return $?
}

fetch_pkg() {
    pacman_fetch_pkg "$1" || aur_helper_fetch_pkg "$1" || aur_fetch_pkg "$1"
    return $?
}

pkg_install() {
    ! pacman_fetch_pkg "$1" && aur_install "$1" || sudo pacman --noconfirm --needed -S "$1"
}

pkg_exists() {
    fetch_pkg "$1" || fetch_pkg ""$1"-git"
    return $?
}
