#!/usr/bin/env bash

## Copyright (C) 2019-2020 Ulises Jeremias Cornejo Fandos
## Licensed under MIT
##
##     @script.name [OPTION] ARGUMENTS...
##
## Options:
##     -h, --help                            Help.
##     -u, --upgrade                         Will update dependencies anyway.
##
##         --os=OS_NAME                      Operating System. Posible values: common | arch-linux | debian | ...
##                                           where common is supposed to work correctly with any linux distro.
##                                           `common` is set as default value for this flag.
##         --log-file=LOG_FILE_PATH          Logs file path, is /tmp/install_progress_log_$(date +'%m-%d-%y_%H:%M:%S').txt by default.
##         --pkgs=COMMA_SEPARATED_DEPS       Dependencies to install.
##

ROOT=$(dirname $0)

source "${ROOT}"/../util/opts/opts.sh || exit
source "${ROOT}"/../util/logs.sh || exit

# override OS with a correct value with the given params
source "${ROOT}"/../util/os.sh || exit

#==========================================
# Default argument values and preprocessing
#==========================================
os=${os:-""}
time_str=$(date +'%m-%d-%y_%H:%M:%S')
log_file=${log_file:-"/tmp/install_progress_log_$time_str.txt"}
pkgs=${pkgs:-""}

[ ! -f "${log_file}" ] && touch ${log_file}

. "${ROOT}"/$os/install-pkgs

#==========================================
# Installing process
#==========================================
describe "Starting process\n\n" 0 

success=0
failed=0

for pkg in $(echo ${pkgs} | tr ',' '\n'); do
    describe "Fetching ${pkg}"
    if type -p ${pkg} > /dev/null && [ -n "$upgrade" ]; then
        log_success "Already installed" ${pkg} ${log_file}
        ((success+=1))
    else
        if ! pkg_exists ${pkg}; then
            log_failed "Package not found" ${pkg} ${log_file}
            ((failed+=1))
            continue
        fi

        log_warn "Package not installed" ${pkg} ${log_file}

        describe "Installing ${pkg}\n" 0
        if pkg_install ${pkg}; then
            log_success "Installed successfully" ${pkg} ${log_file}
            ((success+=1))
        else
            log_failed "Installation fialed" ${pkg} ${log_file}
            ((failed+=1))
        fi   
    fi   
done

all=$(expr ${success} + ${failed})

echo
echo "${GREEN}Success: ${success} ${RED}Failed: ${failed}${REET} Total: ${all}"
