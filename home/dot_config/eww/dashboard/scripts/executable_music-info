#!/usr/bin/env bash

## Get data
STATUS="$(playerctl status)"
COVER="/tmp/.music_cover.jpg"

## Get status
get_status() {
  if [[ $STATUS == *"Playing"* ]]; then
    echo "󰏥"
  else
    echo "󰐌"
  fi
}

## Get song
get_song() {
  song="$(playerctl metadata --format '{{ title }}')"
  if [[ -z $song ]]; then
    echo "Offline"
  else
    echo "$song" | cut -c 1-32
  fi
}

## Get artist
get_artist() {
  artist="$(playerctl metadata --format '{{ artist }}')"
  if [[ -z $artist ]]; then
    echo "Offline"
  else
    echo "$artist"
  fi
}

# Get the percentage of the playback progress
# Get the percentage of the playback progress
get_time() {
  total_length=$(playerctl metadata mpris:length) # Get the total length of the track in microseconds
  position=$(playerctl position)                  # Get the current position in seconds
  if [[ -z $total_length ]] || [[ -z $position ]]; then
    echo "0"
  else
    # Convert total length from microseconds to seconds for calculation
    total_length_seconds=$(echo "$total_length" | awk '{print $1 / 1000000}')
    # Calculate the percentage
    time=$(echo "$position $total_length_seconds" | awk '{printf "%.0f\n", ($1 / $2) * 100}')
    echo "$time"
  fi
}

# Get the current time of the track
get_ctime() {
  ctime=$(playerctl position | awk '{printf "%d:%02d\n", $1/60, $1%60}')
  if [[ -z $ctime ]]; then
    echo "0:00"
  else
    echo "$ctime"
  fi
}

# Get the total time of the track
get_ttime() {
  ttime=$(playerctl metadata mpris:length | awk '{printf "%d:%02d\n", $1/1000000/60, ($1/1000000)%60}')
  if [[ -z $ttime ]]; then
    echo "0:00"
  else
    echo "$ttime"
  fi
}

## Get cover
get_cover() {
  ffmpeg -i "$(playerctl metadata --format '{{ mpris:artUrl }}')" "${COVER}" -y &>/dev/null
  STATUS=$?

  # Check if the file has a embbeded album art
  if [ "$STATUS" -eq 0 ]; then
    echo "$COVER"
  else
    echo "images/music.png"
  fi
}

## Execute accordingly
if [[ $1 == "--song" ]]; then
  get_song
elif [[ $1 == "--artist" ]]; then
  get_artist
elif [[ $1 == "--status" ]]; then
  get_status
elif [[ $1 == "--time" ]]; then
  get_time
elif [[ $1 == "--ctime" ]]; then
  get_ctime
elif [[ $1 == "--ttime" ]]; then
  get_ttime
elif [[ $1 == "--cover" ]]; then
  get_cover
elif [[ $1 == "--toggle" ]]; then
  playerctl play-pause
elif [[ $1 == "--next" ]]; then
  {
    playerctl next
    get_cover
  }
elif [[ $1 == "--prev" ]]; then
  {
    playerctl previous
    get_cover
  }
fi
