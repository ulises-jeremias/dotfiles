#!/usr/bin/env bash

## Files and Data
PREV_TOTAL=0
PREV_IDLE=0
cpuFile="/tmp/.cpu_usage"

## Get CPU usage
get_cpu() {
  if [[ -f ${cpuFile} ]]; then
    fileCont=$(cat "${cpuFile}")
    PREV_TOTAL=$(echo "${fileCont}" | head -n 1)
    PREV_IDLE=$(echo "${fileCont}" | tail -n 1)
  fi

  read -r -a CPU <"/proc/stat" # Get the total CPU statistics.
  unset "CPU[0]"               # Discard the "cpu" prefix.
  IDLE=${CPU[4]}               # Get the idle CPU time.

  # Calculate the total CPU time.
  TOTAL=0

  for VALUE in "${CPU[@]:0:4}"; do
    (("TOTAL=$TOTAL+$VALUE"))
  done

  if [[ ${PREV_TOTAL} != "" ]] && [[ ${PREV_IDLE} != "" ]]; then
    # Calculate the CPU usage since we last checked.
    (("DIFF_IDLE=$IDLE-$PREV_IDLE"))
    (("DIFF_TOTAL=$TOTAL-$PREV_TOTAL"))
    (("DIFF_USAGE=(1000*($DIFF_TOTAL-$DIFF_IDLE)/$DIFF_TOTAL+5)/10"))
    echo "${DIFF_USAGE}"
  else
    echo "?"
  fi

  # Remember the total and idle CPU times for the next check.
  echo "${TOTAL}" >"${cpuFile}"
  echo "${IDLE}" >>"${cpuFile}"
}

## Get Used memory
get_mem() {
  printf "%.0f\n" "$(free -m | grep Mem | awk '{print ($3/$2)*100}')"
}

get_display_info() {
  xrandr --verbose | grep -m 1 -w "$1 connected" -A8 | grep "$2" | cut -f2- -d: | tr -d ' '
}

get_brightness() {
  if type -p brightnessctl >/dev/null; then
    echo "$(brightnessctl -q get) / 1000" | bc -l | awk '{printf "%f\n", $0}'
  elif type -p blight >/dev/null; then
    echo "$(blight get) / 1000" | bc -l | awk '{printf "%f\n", $0}'
  elif type -p xbacklight >/dev/null; then
    bc -l <"$(xbacklight -get -display "$1")" | awk '{printf "%f", $0}'
  else
    get_display_info "$1" 'Brightness: '
  fi
}

## Get Brightness
get_blight() {
  connected=$(xrandr | grep -w connected | cut -f1 -d' ')
  for display in $connected; do
    get_brightness "$display"
    break
  done
}

## Get Battery
get_battery() {
  for file in /sys/class/power_supply/BAT*; do
    BAT=$(basename "$file")
    break
  done
  cat /sys/class/power_supply/"${BAT}"/capacity
}

## Execute accordingly
if [[ $1 == "--cpu" ]]; then
  get_cpu
elif [[ $1 == "--mem" ]]; then
  get_mem
elif [[ $1 == "--blight" ]]; then
  get_blight
elif [[ $1 == "--bat" ]]; then
  get_battery
fi
