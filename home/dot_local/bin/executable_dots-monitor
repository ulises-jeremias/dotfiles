#!/usr/bin/env bash

## Copyright (C) 2019-2025 Ulises Jeremias Cornejo Fandos
## Licensed under MIT.
##
## Check full documentation at: https://github.com/ulises-jeremias/dotfiles/wiki
##
## Print the current monitor name

#
# Print's the current screen index (zero based).
#
# Modified from:
# https://superuser.com/a/992924/240907

OFFSET_RE="\+([-0-9]+)\+([-0-9]+)"

# Get the window position
eval "$(xdotool getmouselocation --shell)"

# Loop through each screen and compare the offset with the window
# coordinates.
monitor_index=0
while read -r name width height xoff yoff; do
  if [ "${X}" -ge "$xoff" ] &&
    [ "${Y}" -ge "$yoff" ] &&
    [ "${X}" -lt "$((xoff + width))" ] &&
    [ "${Y}" -lt "$((yoff + height))" ]; then
    monitor=$name
    break
  fi
  ((monitor_index++))
done < <(xrandr | grep -w connected |
  sed -r "s/^([^ ]*).*\b([-0-9]+)x([-0-9]+)$OFFSET_RE.*$/\1 \2 \3 \4 \5/" |
  sort -nk4,5)

# If we found a monitor, echo it out, otherwise print an error.
if [ -n "$monitor" ]; then
  echo "${monitor}"
  # echo $monitor_index
  exit 0
else
  echo "Couldn't find any monitor for the current window." >&2
  notify-send "$0: Couldn't find any monitor for the current window."
  exit 1
fi
