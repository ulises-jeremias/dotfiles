#!/usr/bin/env bash

## Copyright (C) 2019-2025 Ulises Jeremias Cornejo Fandos
## Licensed under MIT.
##
## Hyprland installation and setup
##
## Check full documentation at: https://github.com/ulises-jeremias/dotfiles/wiki
##
##     @script.name [OPTION]
##
## Options:
##     -h, --help                Show this help message
##     -v, --version             Display script version
##         --nvidia              Install NVIDIA-specific packages
##     -f, --force               Force installation even if already installed
##     -c, --check-only          Only check dependencies, don't install

NAME=$(basename "$0")
VER="1.0"

# Colors
CYAN='\033[0;36m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_step() { echo -e "${CYAN}==>${NC} $1"; }
print_success() { echo -e "${GREEN}✓${NC} $1"; }
print_warning() { echo -e "${YELLOW}!${NC} $1"; }
print_error() { echo -e "${RED}✗${NC} $1"; }

usage() {
  cat <<-EOF

 USAGE:  $NAME [OPTIONS]

 OPTIONS:

     -h,--help          Display this message
     -v,--version       Display script version
     --nvidia           Install NVIDIA-specific packages
     -f,--force         Force installation even if already installed
     -c,--check-only    Only check dependencies, don't install

 This script installs Hyprland and all required dependencies for HorneroConfig.
 It follows the same pattern as other dots-* scripts.

EOF
}

# Check if running on Arch Linux
if [[ ! -f /etc/arch-release ]]; then
  print_error "This script is designed for Arch Linux"
  exit 1
fi

# Check if running as root
if [[ $EUID -eq 0 ]]; then
  print_error "Do not run this script as root"
  exit 1
fi

# Parse arguments
CHECK_ONLY=false
INSTALL_NVIDIA=false
FORCE_INSTALL=false

case "${1:-}" in
  -h|--help)
    usage
    exit 0
    ;;
  -v|--version)
    echo "$NAME -- Version $VER"
    exit 0
    ;;
  -c|--check-only)
    CHECK_ONLY=true
    ;;
  --nvidia)
    INSTALL_NVIDIA=true
    ;;
  -f|--force)
    FORCE_INSTALL=true
    ;;
esac

# Core packages list
CORE_PACKAGES=(
  hyprland
  xdg-desktop-portal-hyprland
  waybar
  mako
  libnotify
  swaylock-effects
  hypridle
  grim
  slurp
  swappy
  swaybg
  hyprpaper
  wl-clipboard
  cliphist
  kitty
  thunar
  brightnessctl
  playerctl
  pamixer
  network-manager-applet
  blueman
  pavucontrol
  ttf-jetbrains-mono-nerd
  ttf-font-awesome
  noto-fonts-emoji
  qt5-wayland
  qt6-wayland
  polkit-gnome
  xwaylandvideobridge
)

NVIDIA_PACKAGES=(
  nvidia-dkms
  nvidia-utils
  libva
)

AUR_PACKAGES=(
  rofi-lbonn-wayland-git
  hyprpicker
  wlogout
)

if [[ "$CHECK_ONLY" == "true" ]]; then
  print_step "Checking Hyprland dependencies..."

  missing=()
  for pkg in "${CORE_PACKAGES[@]}"; do
    if ! pacman -Qi "$pkg" &>/dev/null; then
      missing+=("$pkg")
    fi
  done

  if [[ ${#missing[@]} -eq 0 ]]; then
    print_success "All core dependencies installed"
  else
    print_warning "Missing ${#missing[@]} packages: ${missing[*]}"
  fi

  exit 0
fi

print_step "Installing Hyprland and dependencies..."

# Install paru if needed
if ! command -v paru &>/dev/null; then
  print_step "Installing paru (AUR helper)..."
  (
    cd /tmp || exit 1
    git clone https://aur.archlinux.org/paru.git
    cd paru || exit 1
    makepkg -si --noconfirm
  )
  rm -rf /tmp/paru
  print_success "Paru installed"
fi

# Update system
print_step "Updating system..."
sudo pacman -Syu --noconfirm

# Install core packages
for pkg in "${CORE_PACKAGES[@]}"; do
  if pacman -Qi "$pkg" &>/dev/null && [[ "$FORCE_INSTALL" != "true" ]]; then
    print_success "$pkg already installed"
  else
    if sudo pacman -S --noconfirm "$pkg" 2>/dev/null || paru -S --noconfirm "$pkg"; then
      print_success "Installed $pkg"
    else
      print_warning "Failed to install $pkg"
    fi
  fi
done

# Install NVIDIA packages if requested
if [[ "$INSTALL_NVIDIA" == "true" ]]; then
  print_step "Installing NVIDIA packages..."
  for pkg in "${NVIDIA_PACKAGES[@]}"; do
    paru -S --noconfirm "$pkg" || print_warning "Failed to install $pkg"
  done
  print_warning "Remember to add 'nvidia_drm.modeset=1' to kernel parameters"
fi

# Install AUR packages
for pkg in "${AUR_PACKAGES[@]}"; do
  paru -S --noconfirm "$pkg" || print_warning "Failed to install $pkg"
done

print_success "Hyprland installation complete!"
echo ""
print_step "Next steps:"
echo "  1. Run 'dots wal-reload' to set up colors"
echo "  2. Run 'dots rice selector' to choose a theme"
echo "  3. Log out and select 'Hyprland' from your display manager"
