#!/usr/bin/env bash

## Copyright (C) 2019-2025 Ulises Jeremias Cornejo Fandos
## Licensed under MIT.
##
## Check full documentation at: https://github.com/ulises-jeremias/dotfiles/wiki
##
## Show a jgmenu

# Paths to the original and temporary configuration files
original_config_file="$HOME/.config/jgmenu/jgmenurc-config"
target_config_file="$HOME/.config/jgmenu/jgmenurc"

# Function to get smart colors with proper fallbacks
get_smart_color() {
    local concept="$1"
    local fallback_xrdb="${2:-background}"

    # Load smart colors if available
    if command -v dots-smart-colors >/dev/null 2>&1; then
        # Get smart color directly from the script
        case "$concept" in
            "SMART_BACKGROUND")
                dots-smart-colors --concept=black 2>/dev/null || xrdb -get "background" 2>/dev/null || echo "#1b1f26"
                ;;
            "SMART_FOREGROUND")
                dots-smart-colors --concept=white 2>/dev/null || xrdb -get "foreground" 2>/dev/null || echo "#ffffff"
                ;;
            "SMART_ACCENT")
                dots-smart-colors --concept=accent 2>/dev/null || xrdb -get "color13" 2>/dev/null || echo "#8fa1b3"
                ;;
            "SMART_INFO")
                dots-smart-colors --concept=info 2>/dev/null || xrdb -get "color12" 2>/dev/null || echo "#919ba0"
                ;;
            "SMART_ERROR")
                dots-smart-colors --concept=error 2>/dev/null || xrdb -get "color9" 2>/dev/null || echo "#ff6666"
                ;;
            "SMART_SUCCESS")
                dots-smart-colors --concept=success 2>/dev/null || xrdb -get "color10" 2>/dev/null || echo "#66ff66"
                ;;
            "SMART_WARNING")
                dots-smart-colors --concept=warning 2>/dev/null || xrdb -get "color11" 2>/dev/null || echo "#ffff66"
                ;;
            *)
                xrdb -get "$fallback_xrdb" 2>/dev/null || echo "#ffffff"
                ;;
        esac
    else
        # Fallback to xrdb colors
        xrdb -get "$fallback_xrdb" 2>/dev/null || echo "#ffffff"
    fi
}

# Function to get color (legacy wrapper)
get_xrdb_color() {
    get_smart_color "SMART_FOREGROUND" "$1"
}

# Function to update color placeholders with smart colors
update_color() {
    local color_name="$1"
    local smart_placeholder="$2"
    local opacity_transparency="${3:-100}"

    [ -z "$smart_placeholder" ] && return # Skip if placeholder is empty

    # Get the smart color for this placeholder
    local color_value=$(get_smart_color "$smart_placeholder")

    # Update the color in the config file, preserving opacity/transparency
    sed -i "s|^$color_name.*= SMART_.*|$color_name = $color_value $opacity_transparency|" "$target_config_file"
}

# Ensure the original configuration file exists
if [ ! -f "$original_config_file" ]; then
    echo "Original configuration file $original_config_file does not exist."
    notify-send "$0: Original configuration file $original_config_file does not exist."
    exit 1
fi

# Copy the original configuration file to the temporary location
cp "$original_config_file" "$target_config_file"

# Replace smart color placeholders with actual colors from dots-smart-colors
update_color "color_menu_bg" "SMART_BACKGROUND" "98"
update_color "color_menu_fg" "SMART_FOREGROUND" "100"
update_color "color_norm_bg" "SMART_BACKGROUND" "0"
update_color "color_norm_fg" "SMART_FOREGROUND" "100"
update_color "color_sel_bg" "SMART_ACCENT" "60"
update_color "color_sel_fg" "SMART_FOREGROUND" "100"
update_color "color_sep_fg" "SMART_INFO" "40"

# Set JGMENU_CONFIG to point to the temporary configuration file
export JGMENU_CONFIG="$target_config_file"

# Run jgmenu with the updated configuration file
jgmenu_run
