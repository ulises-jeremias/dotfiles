#!/usr/bin/env bash

#  __        ___    _     _          ____
#  \ \      / / \  | |   | |        |  _ \
#   \ \ /\ / / _ \ | |   | |   _____| | | |
#    \ v  v / ___ \| |___| |__|_____| |_| |
#     \_/\_/_/   \_\_____|_____|    |____/

PICTURES_DIR="" # path to wallpapers directory
DEFAULT_WALLPAPER_SCRIPT_PATH="${HOME}"/.local/bin/defaultwallpaper.sh
ROFI_THEME="${XDG_CONFIG_HOME:-"${HOME}"/.config}"/rofi/tools.rasi

[ -f "${DEFAULT_WALLPAPER_SCRIPT_PATH}" ] && echo "defaultwallpaper.sh exists" || echo xwallpaper >>"${DEFAULT_WALLPAPER_SCRIPT_PATH}" && chmod +x "${DEFAULT_WALLPAPER_SCRIPT_PATH}"

monitor1=$(xrandr --listactivemonitors | grep "+" | awk '{print $4}' | awk NR==1) # select the first monitor for dual mode
[ -n "${monitor1}" ] && resolution1=$(xrandr --listactivemonitors | grep "${monitor1}" | sed 's/[\/x]/ /g' | awk '{print $3 "x" $5}')
monitor2=$(xrandr --listactivemonitors | grep "+" | awk '{print $4}' | awk NR==2) # select the second monitor for dual mode
[ -n "${monitor2}" ] && resolution2=$(xrandr --listactivemonitors | grep "${monitor2}" | sed 's/[\/x]/ /g' | awk '{print $3 "x" $5}')
monitor3=$(xrandr --listactivemonitors | grep "+" | awk '{print $4}' | awk NR==3) # select the third monitor for triple mode
[ -n "${monitor3}" ] && resolution3=$(xrandr --listactivemonitors | grep "${monitor3}" | sed 's/[\/x]/ /g' | awk '{print $3 "x" $5}')
# get number of avilable active monitors
num_of_monitors=$(xrandr --listactivemonitors | grep -c "+")
# get screen resulotion to calculate the center
x=$(xrandr | grep "\*" | sed 's/x/ /g' | awk -F " " '{print $1}' | sed 's/\ //g')
y=$(xrandr | grep "\*" | sed 's/x/ /g' | awk -F " " '{print $2}' | sed 's/\ //g')
xl=$(echo "(${x}-500)/2" | bc)
yl=$(echo "(${y}-500)/2" | bc)
location="500x500+${xl}+${yl}"
# will be set to true when using -p flag to activate pywal
with_pywall=false
# will be set to true when using -n flag to activate random photo selection
randomly=false
# will be set to true when using -b flag to only change betterlockscreen background
only_betterlockscreen=false
# will be set to true when using -b flag to also change betterlockscreen background
with_betterlockscreen=false
start_message="apply wallpaper to lockscreen"
finish_message="finished applying wallpaper to lockscreen"
use_feh=false
use_rofi=false

# function to reset the last set wallpaper(s)
restore() {
    if [ "${use_feh}" = "true" ]; then
        "${HOME}"/.fehbg &
    else
        "${DEFAULT_WALLPAPER_SCRIPT_PATH}" &
    fi
}

# help message
usage() {
    echo "${0}: a simple and fast wallpaper manager for x"
    echo ""
    echo "Usage:"
    echo "-h print this help message and exit"
    echo "-d path/to/your/wallpapers"
    echo "-r restore last set wallpaper(s)"
    echo "-p change colorscheme using pywall"
    echo "-b change betterlockscreen wallpaper too"
    echo "-l only change betterlockscreen wallpaper"
    echo "-n choose a randome wallpaper(s)"
    echo "-f use feh instead of xwallpaper to set and restore the wallpaper"
    echo "-R use rofi instead of dmenu"
    echo ""
}

while getopts :d:rhpbnlfR option; do
    case "${option}" in
    d) PICTURES_DIR="${OPTARG}" ;;
    r) restore && exit ;;
    p) with_pywall=true ;;
    b) with_betterlockscreen=true ;;
    l) only_betterlockscreen=true ;;
    n) randomly=true ;;
    h) usage && exit 0 ;;
    f) use_feh=true ;;
    R) use_rofi=true ;;
    *) usage && exit 0 ;;
    esac
done

[ -z "${PICTURES_DIR}" ] && usage && exit 0 # if no directory is set, print help message and exit

#  show dmenu in pywal colors only if ran with -p flag
if [ "${with_pywall}" = "true" ]; then
    . "${HOME}"/.cache/wal/colors.sh
    color_options="-nb ${color0} -nf ${color15} -sb ${color1} -sf ${color15}"
else
    color_options=""
fi

single() {
    if [ "${randomly}" = "true" ]; then
        walls=$(du -a "${PICTURES_DIR}" | grep 'jpg\|jpeg\|png\|gif' | shuf -n 1 | awk '{print $2}')
    else
        walls=$(sxiv -t -o -r -b -g "${location}" "${PICTURES_DIR}" | xargs) # running sxiv in thumbnail mode.
    fi
    wall1=$(printf "%s" "${walls}" | awk '{w = 1; for (--w; w >=0; w--){printf "%s\t",$(NF-w)}print ""}') # only print the last marked wallpaper

    # if no picture is marked in sxiv, exit.
    [ -z "${walls}" ] && exit 0

    if [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    elif [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "false" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    elif [ "${use_rofi}" = "false" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    else
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    fi

    [ -z "${wall_options}" ] && exit 0

    if [ "${only_betterlockscreen}" = "true" ]; then
        betterlockscreen -u ${wall1} -r ${resolution1}
    else
        if [ "${use_feh}" = "true" ]; then
            feh --bg-${wall_options} ${wall1}
        else
            xwallpaper --${wall_options} ${wall1} && sed -i "s|xwallpaper.*|xwallpaper  --${wall_options} ${wall1}|" "${DEFAULT_WALLPAPER_SCRIPT_PATH}"
        fi
    fi

    [ "${with_pywall}" = "true" ] && wal -i ${wall1} -n

    if [ "${with_betterlockscreen}" = "true" ]; then
        dunstify "${0}" "${start_message}"
        betterlockscreen -u ${wall1} -r ${resolution1}
        dunstify "${0}" "${finish_message}"
    fi
}

# to set to diffrent wallpapers on each desktop
dual() {
    if [ "${randomly}" = "true" ]; then
        dwalls=$(du -a "${PICTURES_DIR}" | grep 'jpg\|jpeg\|png\|gif' | shuf -n 1 | awk '{print $2}')
    else
        dwalls=$(sxiv -t -o -r -b -g "${location}" "${PICTURES_DIR}" | xargs) # running sxiv in thimbnail mode.
    fi
    dwallslast2=$(printf "%s" "${dwalls}" | awk '{w = 2; for (--w; w >=0; w--){printf "%s\t",$(NF-w)}print ""}') # only print the two last marked wallpapers
    dwall1=$(printf "%s" "${dwallslast2}" | awk '{print $1}')                                                    # print the path to the before-last marked wallpaper
    dwall2=$(printf "%s" "${dwallslast2}" | awk '{print $2}')                                                    # print the path to the last marked wallpaper

    # if no picture is marked in sxiv, exit.
    [ -z "${dwalls}" ] && exit 0

    if [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    elif [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "false" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    elif [ "${use_rofi}" = "false" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    else
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    fi

    [ -z "${wall_options}" ] && exit 0

    if [ "${use_feh}" = "true" ]; then
        feh --bg-${wall_options} ${dwall1} ${dwall2}
    else
        xwallpaper --output ${monitor1} --${wall_options} ${dwall1} --output ${monitor2} --${wall_options} ${dwall2} && sed -i "s|xwallpaper.*|xwallpaper --output ${monitor1} --${wall_options} ${dwall1} --output ${monitor2} --${wall_options} ${dwall2}|" "${DEFAULT_WALLPAPER_SCRIPT_PATH}"
    fi

    [ "${with_pywall}" = "true" ] && wal -i ${dwall1} -n

    if [ "${with_betterlockscreen}" = "true" ]; then
        dunstify "${0}" "${start_message}"
        betterlockscreen -u ${dwall1} -r ${resolution1}
        dunstify "${0}" "${finish_message}"
    fi
}

triple() {

    if [ "${randomly}" = "true" ]; then
        twalls=$(du -a "${PICTURES_DIR}" | grep 'jpg\|jpeg\|png\|gif' | shuf -n 1 | awk '{print $2}')
    else
        twalls=$(sxiv -t -o -r -b -g "${location}" "${PICTURES_DIR}" | xargs) # running sxiv in thimbnail mode.
    fi
    twallslast3=$(printf "%s" "${twalls}" | awk '{w = 3; for (--w; w >=0; w--){printf "%s\t",$(NF-w)}print ""}') # only print the three last marked wallpapers
    twall1=$(printf "%s" "${twallslast3}" | awk '{print $1}')                                                    # print the path to the before-before-last marked wallpaper
    twall2=$(printf "%s" "${twallslast3}" | awk '{print $2}')                                                    # print the path to the before-last marked wallpaper
    twall3=$(printf "%s" "${twallslast3}" | awk '{print $3}')                                                    # print the path to the last marked wallpaper

    # if no picture is marked in sxiv, exit.
    [ -z "${twalls}" ] && exit 0

    if [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    elif [ "${use_rofi}" = "true" ] && [ "${use_feh}" = "false" ]; then
        wall_menu="rofi -theme ${ROFI_THEME} -dmenu -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    elif [ "${use_rofi}" = "false" ] && [ "${use_feh}" = "true" ]; then
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "fill\ncenter\ntile\nscale\nno-xinerama" | ${wall_menu})
    else
        wall_menu="dmenu ${color_options} -i -l 5 -p Options"
        wall_options=$(echo -e "zoom\ncenter\ntile\nstretch\nno-randr" | ${wall_menu})
    fi

    [ -z "${wall_options}" ] && exit 0

    if [ "${use_feh}" = "true" ]; then
        feh --bg-"${wall_options}" ${dwall1} "${dwall2}"
    else
        xwallpaper --output ${monitor1} --${wall_options} ${twall1} --output ${monitor2} --${wall_options} ${twall2} --output ${monitor3} --${wall_options} ${twall3} && sed -i "s|xwallpaper.*|xwallpaper --output ${monitor1} --${wall_options} ${twall1} --output ${monitor2} --${wall_options} ${twall2} --output ${monitor3} --${wall_options} ${twall3} |" "${DEFAULT_WALLPAPER_SCRIPT_PATH}"
    fi

    [ "${with_pywall}" = "true" ] && wal -i ${twall2} -n

    if [ "${with_betterlockscreen}" = "true" ]; then
        dunstify "${0}" "${start_message}"
        betterlockscreen -u ${twall2} -r ${resolution2}
        dunstify "${0}" "${finish_message}"
    fi
}

if [ "${use_rofi}" = "true" ]; then
    menu="rofi -theme ${ROFI_THEME} -dmenu -l 3 -p Mode?"
else
    menu="dmenu ${color_options} -l 3 -p Mode?"
fi

if [ "${num_of_monitors}" -eq 1 ]; then
    single && exit 0
elif [ "${num_of_monitors}" -eq 2 ]; then
    mode=$(echo -e "Single: Choose one wallpaper\nDual: Choose two wallpapers" | ${menu})
elif [ "${num_of_monitors}" -ge 3 ]; then
    mode=$(echo -e "Single: Choose one wallpaper\nDual: Choose two wallpapers\nTriple: Choose three wallpapers" | ${menu})
fi

echo "Executing mode ${mode}"

case "${mode}" in
Single*) single ;;
Dual*) dual ;;
Triple*) triple ;;
esac
