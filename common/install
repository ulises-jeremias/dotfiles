#!/usr/bin/env bash

## Copyright (C) 2019-2022 Ulises Jeremias Cornejo Fandos
## Licensed under MIT
##
##     @script.name [OPTION] ARGUMENTS...
##
## Options:
##     -h, --help                            Help.
##     -c, --clear                           Will remove existing dotfiles before installing the new ones.
##         --dry-run                         Will not install anything. Just will create the dotfiles dir.
##
##         --os=OS_NAME                      Operating System. Posible values: common | arch-linux | debian | ...
##                                           where common is supposed to work correctly with any linux distro.
##                                           `common` is set as default value for this flag.
##         --log-file=LOG_FILE_PATH          Logs file path, is /tmp/dots_install_log_$(date +'%m-%d-%y_%H:%M:%S').txt by default.
##         --dotfiles-dir=OUTPUT_PATH        Dotfiles output dir, is ~/dotfiles by default.
##

set -e

ROOT="$(realpath "$(dirname "$0")")"
DOTFILES_DIR=$(realpath "${ROOT}")

. /opt/dots/util/easy-options/easyoptions.sh
. /opt/dots/util/logs.sh

# override OS with a correct value with the given params
. /opt/dots/util/os.sh

#==========================================
# Default argument values and preprocessing
#==========================================
os=${os:-""}
time_str=$(date +'%m-%d-%y_%H:%M:%S')
log_file=${log_file:-"/tmp/dots_install_log_$time_str.txt"}

#==========================================
# Make symlink for bin files
#==========================================
if [ ! -d "${HOME}/.local/bin" ]; then
  mkdir ~/.local/bin
fi

describe "Creating symlinks for bin files"

for bin_path in "${DOTFILES_DIR}"/bin/*; do
  bin=$(basename "${bin_path}")

  chmod +x "${bin_path}"
  rm -f ~/.local/bin/"${bin}" >/dev/null 2>&1
  ln -sf "$(realpath "${bin_path}")" ~/.local/bin/"${bin}"
done

echo -e "${GREEN}Done${RESET}"

#==========================================
# Copy dotfiles and execute dotfiles
# install strategy
#==========================================
success=0
failed=0

echo
describe "Installing dotfiles"
echo
echo

for config_path in "${DOTFILES_DIR}"/config/*; do
  config=$(basename "${config_path}")

  describe "Installing ${config} dotfiles"

  if [ ! -f "${DOTFILES_DIR}"/config/"${config}"/install ]; then
    echo -e "${YELLOW}No install script found${RESET}"
    ((success += 1))
    continue
  elif bash "${DOTFILES_DIR}"/config/"${config}"/install; then
    echo -e "${GREEN}Done${RESET}"
    ((success += 1))
  else
    echo -e "${RED}Failed${RESET}"
    ((failed += 1))
  fi
done

all=$((success + failed))

echo
echo "${GREEN}Success: ${success} ${RED}Failed: ${failed}${RESET} Total: ${all}"
